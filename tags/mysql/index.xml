<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Hugo</title>
    <link>https://blog.wukaige.com/tags/mysql/</link>
    <description>Recent content in Mysql on Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 17 Oct 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.wukaige.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust 操作 mysql 数据库</title>
      <link>https://blog.wukaige.com/rust-%E6%93%8D%E4%BD%9C-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.wukaige.com/rust-%E6%93%8D%E4%BD%9C-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>安装所需要的包 cargo add mysql 连接数据库 use mysql::{prelude::Queryable, *}; use std::fs; fn my_conn(url: &amp;amp;str) -&amp;gt; Result&amp;lt;PooledConn, mysql::Error&amp;gt; { let pool = Pool::new(url)?; let conn = pool.get_conn()?; Ok(conn) } fn main() { let url = &amp;#34;mysql://user:password@127.0.0.1:3306/DB&amp;#34;; let mut conn = my_conn(url).unwrap(); } 建表 use mysql::{prelude::Queryable, *}; fn main() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; { let url = &amp;#34;mysql://user:password@127.0.0.1:3306/DB&amp;#34;; let mut conn =</description>
    </item>
  </channel>
</rss>
