<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ES 数据插入速度优化，百万数据从 4.5h -&gt; 1h</title>
      <link href="/ES-%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96%EF%BC%8C%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE%E4%BB%8E-4-5h-1h/"/>
      <url>/ES-%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96%EF%BC%8C%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE%E4%BB%8E-4-5h-1h/</url>
      
        <content type="html"><![CDATA[<blockquote><p>写了个脚本把数据库里面的 content 字段转换为向量插入到 ES， 100w 数据需要 4.5 小时，太慢了！！！</p></blockquote><h2 id="一、慢速度脚本（4-5h）"><a href="#一、慢速度脚本（4-5h）" class="headerlink" title="一、慢速度脚本（4.5h）"></a>一、慢速度脚本（4.5h）</h2><p>只用 aiomysql 对数据库进行异步请求，ES 更新则是一条一更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiomysql</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> text2vec <span class="keyword">import</span> SentenceModel</span><br><span class="line"></span><br><span class="line">host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line">database = <span class="string">&#x27;[DATABASE]&#x27;</span></span><br><span class="line">user = <span class="string">&#x27;root&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;[PASSWD]&#x27;</span></span><br><span class="line">batch_size = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># load model</span></span><br><span class="line">model = SentenceModel(<span class="string">&#x27;shibing624/text2vec-base-chinese&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">query_mysql</span>(<span class="params">start, end, cursor</span>):</span><br><span class="line">    sql_query = <span class="string">f&quot;select id,content from [TABLE] where id &gt; <span class="subst">&#123;start&#125;</span> and id &lt;= <span class="subst">&#123;end&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">await</span> cursor.execute(sql_query)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> cursor.fetchall()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update_es</span>(<span class="params">data</span>):</span><br><span class="line">    _<span class="built_in">id</span> = data.get(<span class="string">&quot;id&quot;</span>)</span><br><span class="line">    url = <span class="string">f&quot;http://127.0.0.1:9200/[INDEX]/_doc/<span class="subst">&#123;_<span class="built_in">id</span>&#125;</span>&quot;</span></span><br><span class="line">    response = requests.put(url, json=data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查响应状态码</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code <span class="keyword">in</span> [<span class="number">200</span>, <span class="number">201</span>]:</span><br><span class="line">        msg = <span class="string">f&quot;[<span class="subst">&#123;_<span class="built_in">id</span>&#125;</span>] 插入成功&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg = <span class="string">f&quot;[<span class="subst">&#123;<span class="built_in">id</span>&#125;</span>] 插入失败: <span class="subst">&#123;response.text&#125;</span>&quot;</span></span><br><span class="line">        os.system(<span class="string">&quot;echo &#x27;&#123;&#125;&#x27; &gt;&gt; ./error.log&quot;</span>.<span class="built_in">format</span>(msg))</span><br><span class="line">    <span class="built_in">print</span>(msg)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_batch</span>(<span class="params">start, end, pool</span>):</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> pool.acquire() <span class="keyword">as</span> conn:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            rows = <span class="keyword">await</span> query_mysql(start, end, cursor)</span><br><span class="line">            ids = [row[<span class="number">0</span>] <span class="keyword">for</span> row <span class="keyword">in</span> rows]</span><br><span class="line">            contents = [row[<span class="number">1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> rows]</span><br><span class="line">            vector = model.encode(contents, show_progress_bar=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">for</span> _<span class="built_in">id</span>, vec <span class="keyword">in</span> <span class="built_in">zip</span>(ids, vector.tolist()):</span><br><span class="line">                data = &#123;</span><br><span class="line">                    <span class="string">&quot;id&quot;</span>: _<span class="built_in">id</span>,</span><br><span class="line">                    <span class="string">&quot;content_vector&quot;</span>: vec</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">await</span> update_es(data)</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">batches</span>):</span><br><span class="line">    pool = <span class="keyword">await</span> aiomysql.create_pool(host=host, port=port, user=user, password=password, db=database)</span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(batches):</span><br><span class="line">        start = i * batch_size</span><br><span class="line">        end = (i + <span class="number">1</span>) * batch_size</span><br><span class="line">        tasks.append(process_batch(start, end, pool))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line">    pool.close()</span><br><span class="line">    <span class="keyword">await</span> pool.wait_closed()</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    asyncio.run(main(<span class="number">100</span>))</span><br></pre></td></tr></table></figure><p>运行截图(4h 30m 21s)：<br><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230804092603804.png" alt="image-20230804092603804"></p><h2 id="二、初步优化（1h）"><a href="#二、初步优化（1h）" class="headerlink" title="二、初步优化（1h）"></a>二、初步优化（1h）</h2><p>安装 elasticsearch[async] 模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install <span class="string">&#x27;elasticsearch[async]&#x27;</span></span><br></pre></td></tr></table></figure><p>使用 es bulk 批量更新数据，加速数据插入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiomysql</span><br><span class="line"><span class="keyword">from</span> text2vec <span class="keyword">import</span> SentenceModel</span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> AsyncElasticsearch</span><br><span class="line"><span class="keyword">from</span> elasticsearch.helpers <span class="keyword">import</span> async_bulk</span><br><span class="line"></span><br><span class="line">host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line">database = <span class="string">&#x27;[DATABASE]&#x27;</span></span><br><span class="line">user = <span class="string">&#x27;root&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;[PASSWD]&#x27;</span></span><br><span class="line">batch_size = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># load model</span></span><br><span class="line">model = SentenceModel(<span class="string">&#x27;shibing624/text2vec-base-chinese&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># es client</span></span><br><span class="line">es = AsyncElasticsearch([<span class="string">&quot;http://127.0.0.1:9200&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build_bulk_data</span>(<span class="params">ids, vectors</span>):</span><br><span class="line">  <span class="keyword">for</span> _<span class="built_in">id</span>, vec <span class="keyword">in</span> <span class="built_in">zip</span>(ids, vectors):</span><br><span class="line">    data = &#123;</span><br><span class="line">      <span class="string">&quot;_index&quot;</span>: index,</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: _<span class="built_in">id</span>,</span><br><span class="line">      <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: _<span class="built_in">id</span>, </span><br><span class="line">        <span class="string">&quot;content_vector&quot;</span>: vec</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">yield</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">query_mysql</span>(<span class="params">start, end, cursor</span>):</span><br><span class="line">    sql_query = <span class="string">f&quot;select id,content from [TABLE] where id &gt; <span class="subst">&#123;start&#125;</span> and id &lt;= <span class="subst">&#123;end&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">await</span> cursor.execute(sql_query)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> cursor.fetchall()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_batch</span>(<span class="params">start, end, pool</span>):</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> pool.acquire() <span class="keyword">as</span> conn:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># query mysql</span></span><br><span class="line">            rows = <span class="keyword">await</span> query_mysql(start, end, cursor)</span><br><span class="line">            ids = [row[<span class="number">0</span>] <span class="keyword">for</span> row <span class="keyword">in</span> rows]</span><br><span class="line">            contents = [row[<span class="number">1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> rows]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># encode content</span></span><br><span class="line">            vectors = model.encode(contents, show_progress_bar=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># build bulk data</span></span><br><span class="line">            bulk_data = build_bulk_data(ids, vectors)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                resp = <span class="keyword">await</span> async_bulk(es, bulk_data, chunk_size=<span class="number">500</span>, max_retries=<span class="number">3</span>, request_timeout=<span class="number">60</span>*<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[<span class="subst">&#123;start&#125;</span>-<span class="subst">&#123;end&#125;</span>] Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[<span class="subst">&#123;start&#125;</span>-<span class="subst">&#123;end&#125;</span>] SUCCESS: <span class="subst">&#123;resp[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">batches, offset=<span class="number">0</span></span>):</span><br><span class="line">    <span class="comment"># mysql pool</span></span><br><span class="line">    pool = <span class="keyword">await</span> aiomysql.create_pool(host=host, port=port, user=user, password=password, db=database)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create task list</span></span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(offset, offset + batches):</span><br><span class="line">        start = i * batch_size</span><br><span class="line">        end = (i + <span class="number">1</span>) * batch_size</span><br><span class="line">        tasks.append(process_batch(start, end, pool))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line">    pool.close()</span><br><span class="line">    <span class="keyword">await</span> pool.wait_closed()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    asyncio.run(main(<span class="number">100</span>, offset=<span class="number">100</span>))</span><br></pre></td></tr></table></figure><p>运行截图(1h 3m 9s)：</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230804112915854.png" alt="image-20230804112915854"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ES </tag>
            
            <tag> async </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 异步更新 mysql 数据库 (asyncio + aiomysql)</title>
      <link href="/Python-%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93-asyncio-aiomysql/"/>
      <url>/Python-%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93-asyncio-aiomysql/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据库有一亿数据，需要写一个垃圾脚本更新某个字段，需要 6+ 小时，太慢了！！！</p></blockquote><h2 id="一、下载依赖"><a href="#一、下载依赖" class="headerlink" title="一、下载依赖"></a>一、下载依赖</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install asyncio aiomysql</span><br></pre></td></tr></table></figure><h2 id="二、优化脚本"><a href="#二、优化脚本" class="headerlink" title="二、优化脚本"></a>二、优化脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> aiomysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># Replace these values with your actual MySQL database credentials</span></span><br><span class="line">host = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">port = <span class="number">3306</span></span><br><span class="line">database = <span class="string">&quot;[YOUR DB]&quot;</span></span><br><span class="line">user = <span class="string">&quot;root&quot;</span></span><br><span class="line">password = <span class="string">&quot;[PASSWD]&quot;</span></span><br><span class="line">batch_size = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_money</span>(<span class="params">text</span>):</span><br><span class="line">    text = text.replace(<span class="string">&quot;万元&quot;</span>, <span class="string">&quot;0000元&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 共计 / 合计</span></span><br><span class="line">    money = re.search(<span class="string">&quot;[共合]计(\d+(?:\.\d&#123;1,2&#125;)?)元&quot;</span>, text)</span><br><span class="line">    <span class="keyword">if</span> money:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(<span class="built_in">float</span>(money.group(<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># xxxx 元 (只有一条记录)</span></span><br><span class="line">    money = re.findall(<span class="string">&quot;(\d+(?:\.\d&#123;1,2&#125;)?)元&quot;</span>, text)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">set</span>(money)) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(<span class="built_in">float</span>(money[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">query_mysql</span>(<span class="params">start, end, cursor</span>):</span><br><span class="line">    sql_query = <span class="string">f&quot;SELECT id,text FROM [TABLE] where id &gt; <span class="subst">&#123;start&#125;</span> and id &lt;= <span class="subst">&#123;end&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">await</span> cursor.execute(sql_query)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> cursor.fetchall()</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">update_mysql</span>(<span class="params">_<span class="built_in">id</span>, money, cursor</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sql_query = <span class="string">f&quot;UPDATE [TABLE] SET money=<span class="subst">&#123;money&#125;</span> where id=<span class="subst">&#123;_<span class="built_in">id</span>&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">await</span> cursor.execute(sql_query)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        os.system(<span class="string">&quot;echo &#123;&#125;:&#123;&#125;: &gt;&gt; error.log&quot;</span>.<span class="built_in">format</span>(_<span class="built_in">id</span>, money, e))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(sql_query)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">process_batch</span>(<span class="params">start, end, pool</span>):</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> pool.acquire() <span class="keyword">as</span> conn:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            rows = <span class="keyword">await</span> query_mysql(start, end, cursor)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> _<span class="built_in">id</span>, section_truth <span class="keyword">in</span> rows:</span><br><span class="line">                text = re.search(<span class="string">&quot;诉讼请求.*?事实和理由&quot;</span>, section_truth)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> text:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                money = parse_money(text.group())</span><br><span class="line">                <span class="keyword">if</span> money != <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">await</span> update_mysql(_<span class="built_in">id</span>, money, cursor)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;_<span class="built_in">id</span>&#125;</span>[<span class="subst">&#123;money&#125;</span>]: <span class="subst">&#123;text.group()&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">await</span> conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">batches</span>):</span><br><span class="line">    pool = <span class="keyword">await</span> aiomysql.create_pool(host=host, port=port, user=user, password=password, db=database)</span><br><span class="line">    tasks = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(batches):</span><br><span class="line">        start = i * batch_size</span><br><span class="line">        end = (i + <span class="number">1</span>) * batch_size</span><br><span class="line">        tasks.append(process_batch(start, end, pool))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> asyncio.gather(*tasks)</span><br><span class="line">    pool.close()</span><br><span class="line">    <span class="keyword">await</span> pool.wait_closed()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    asyncio.run(main(<span class="number">13379</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> async </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flask + gunicorn 实现高并发</title>
      <link href="/flask-gunicorn-%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
      <url>/flask-gunicorn-%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 flask 写了一个 hanlp 分词 api，想提高 api 的并发量。</p></blockquote><h2 id="分词-api-编写"><a href="#分词-api-编写" class="headerlink" title="分词 api 编写"></a>分词 api 编写</h2><p><u>app.py</u></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hanlp</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, current_app <span class="keyword">as</span> app, Response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">os.environ[<span class="string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="string">&quot;0,1&quot;</span></span><br><span class="line"></span><br><span class="line">tokenizer = hanlp.load(hanlp.pretrained.tok.COARSE_ELECTRA_SMALL_ZH)</span><br><span class="line">tok_fine = hanlp.load(hanlp.pretrained.tok.FINE_ELECTRA_SMALL_ZH)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/hanlp&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hlp</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;</span><br><span class="line">            <span class="string">&quot;status&quot;</span>: <span class="string">&quot;not ok&quot;</span>,</span><br><span class="line">            <span class="string">&quot;message&quot;</span>: <span class="string">&quot;Get Method Is Not Allowed.&quot;</span></span><br><span class="line">        &#125;), <span class="number">405</span>  <span class="comment"># HTTP status code for Method Not Allowed</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Retrieve options</span></span><br><span class="line">    options = request.get_json(silent=<span class="literal">True</span>) <span class="keyword">or</span> &#123;&#125;</span><br><span class="line">    text = options.get(<span class="string">&quot;text&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    method = options.get(<span class="string">&quot;method&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    app.logger.debug(text)</span><br><span class="line">    HanLP = hanlp.pipeline().append(hanlp.utils.rules.split_sentence).append(</span><br><span class="line">                tok_fine <span class="keyword">if</span> method == <span class="string">&quot;fine&quot;</span> <span class="keyword">else</span> tokenizer</span><br><span class="line">            ).append(<span class="keyword">lambda</span> sents: <span class="built_in">sum</span>(sents, []))</span><br><span class="line">    result = HanLP(text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Response(</span><br><span class="line">        response=json.dumps(result, ensure_ascii=<span class="literal">False</span>),</span><br><span class="line">        status=<span class="number">200</span>, mimetype=<span class="string">&quot;application/json; charset=utf-8&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.after_request</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">after_request</span>(<span class="params">response</span>):</span><br><span class="line">    app.logger.debug(response.get_json(silent=<span class="literal">True</span>))</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5000</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="安装-gunicorn-库"><a href="#安装-gunicorn-库" class="headerlink" title="安装 gunicorn 库"></a>安装 gunicorn 库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install gunicorn</span><br></pre></td></tr></table></figure><h2 id="使用-gunicorn-启动-flask-app"><a href="#使用-gunicorn-启动-flask-app" class="headerlink" title="使用 gunicorn 启动 flask app"></a>使用 gunicorn 启动 flask app</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn -w 10 -b <span class="string">&quot;0.0.0.0:5000&quot;</span> <span class="string">&quot;app:app&quot;</span></span><br></pre></td></tr></table></figure><p>参数解释：</p><p><code>-w</code> worker, 并发数</p><p><code>-b</code> 监听地址</p>]]></content>
      
      
      
        <tags>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>logstash 拼接字段</title>
      <link href="/logstash-%E6%8B%BC%E6%8E%A5%E5%AD%97%E6%AE%B5/"/>
      <url>/logstash-%E6%8B%BC%E6%8E%A5%E5%AD%97%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>ES 数据的 content 字段是 html 格式的内容，现在想用纯文本内容代替 html。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p> 用 ES reindex API 的 script 功能去除 html 标签。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SOURCE_INDEX=<span class="string">&quot;[source index]&quot;</span></span><br><span class="line">TARGET_INDEX=<span class="string">&quot;[target index]&quot;</span></span><br><span class="line">START=<span class="variable">$1</span></span><br><span class="line">END=<span class="variable">$2</span></span><br><span class="line">BATCH_SIZE=10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># Elasticsearch 集群的 SSL 配置</span></span><br><span class="line"><span class="comment"># CERT_FILE=&quot;/path/to/your/es/http_ca.crt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行 reindex 操作</span></span><br><span class="line"><span class="keyword">for</span> ((i = <span class="variable">$START</span>; i &lt; <span class="variable">$END</span>; i++)); <span class="keyword">do</span></span><br><span class="line">  from=$((i * BATCH_SIZE))</span><br><span class="line">  to=$((from + BATCH_SIZE))</span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;Processing batch <span class="subst">$((i + 1)</span>) of <span class="variable">$END</span> ...\n&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 发起 reindex 请求</span></span><br><span class="line">  <span class="comment"># curl -s -X POST &quot;https://127.0.0.1:9555/_reindex?refresh=false&quot; -H &#x27;Content-Type: application/json&#x27; --cacert $CERT_FILE -u &quot;elastic:[passwd]&quot; -d &quot;</span></span><br><span class="line">  curl -s -X POST <span class="string">&quot;http://127.0.0.1:9220/_reindex?refresh=false&quot;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="string">&quot;</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    \&quot;source\&quot;: &#123;</span></span><br><span class="line"><span class="string">      \&quot;index\&quot;: \&quot;<span class="variable">$SOURCE_INDEX</span>\&quot;,</span></span><br><span class="line"><span class="string">      \&quot;size\&quot;: <span class="variable">$BATCH_SIZE</span>,</span></span><br><span class="line"><span class="string">      \&quot;query\&quot;: &#123;</span></span><br><span class="line"><span class="string">        \&quot;range\&quot;: &#123;</span></span><br><span class="line"><span class="string">          \&quot;id\&quot;: &#123;</span></span><br><span class="line"><span class="string">            \&quot;gte\&quot;: <span class="variable">$from</span>,</span></span><br><span class="line"><span class="string">            \&quot;lt\&quot;: <span class="variable">$to</span></span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    \&quot;dest\&quot;: &#123;</span></span><br><span class="line"><span class="string">      \&quot;index\&quot;: \&quot;<span class="variable">$TARGET_INDEX</span>\&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    \&quot;script\&quot;: &#123; \&quot;source\&quot;: \&quot;ctx._source.content = /&lt;[^&gt;]+&gt;/ .matcher(ctx._source.content).replaceAll(&#x27;&#x27;)\&quot; &#125;</span></span><br><span class="line"><span class="string">  &#125;&quot;</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Reindex completed.&quot;</span></span><br></pre></td></tr></table></figure><p>发现去掉了很多原文内容，舍弃。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>从原始数据库查询 content 字段的各个部分（text 版本的 content 被分成了 section_1, section_2, section_3）并更新 ES 的 content 字段。</p><p>logstash 配置文件： <u>update-content.conf</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    jdbc &#123;</span><br><span class="line">      jdbc_driver_library =&gt; &#x27;/path/to/mysql-connector-java-8.0.21.jar&#x27;</span><br><span class="line">      jdbc_driver_class =&gt; &#x27;com.mysql.cj.jdbc.Driver&#x27;</span><br><span class="line">      jdbc_connection_string =&gt; &#x27;jdbc:mysql://127.0.0.1:4011/LawDB?useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true&amp;autoReconnect=true&#x27;</span><br><span class="line">      jdbc_user =&gt; &#x27;root&#x27;</span><br><span class="line">      jdbc_password =&gt; &#x27;[passwd]&#x27;</span><br><span class="line">      jdbc_validate_connection =&gt; true</span><br><span class="line">      jdbc_paging_enabled =&gt; &#x27;true&#x27;</span><br><span class="line">      jdbc_page_size =&gt; &#x27;1000&#x27;</span><br><span class="line">      jdbc_default_timezone =&gt; &#x27;Asia/Shanghai&#x27;</span><br><span class="line">      statement =&gt; &#x27;select id,section_1,section_2,section_3 from [your table]&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      &quot;content&quot; =&gt; &quot;%&#123;section_1&#125; %&#123;section_2&#125; %&#123;section_3&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&quot;@version&quot;, &quot;@timestamp&quot;, &quot;section_1&quot;, &quot;section_2&quot;, &quot;section_3&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">      codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [ &#x27;http://127.0.0.1:9220&#x27; ]</span><br><span class="line">      index =&gt; &#x27;[your index]&#x27;</span><br><span class="line">      action =&gt; &#x27;update&#x27;</span><br><span class="line">      document_id =&gt; &#x27;%&#123;id&#125;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行 logstash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -w 10 --path.data <span class="string">&quot;/tmp/logstash-data&quot;</span> -f /path/to/update-content.conf</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ES </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 https 访问 alist</title>
      <link href="/%E4%BD%BF%E7%94%A8-https-%E8%AE%BF%E9%97%AE-alist/"/>
      <url>/%E4%BD%BF%E7%94%A8-https-%E8%AE%BF%E9%97%AE-alist/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>通过 http 访问 alist，地址栏那个感叹号看起来有点丑。</p><h2 id="申请-Cloudflare-证书"><a href="#申请-Cloudflare-证书" class="headerlink" title="申请 Cloudflare 证书"></a>申请 Cloudflare 证书</h2><p><a href="https://www.google.com.hk/search?q=%E7%94%B3%E8%AF%B7+Cloudflare+%E8%AF%81%E4%B9%A6&oq=%E7%94%B3%E8%AF%B7+Cloudflare+%E8%AF%81%E4%B9%A6&aqs=chrome..69i57.630j0j7&sourceid=chrome&ie=UTF-8">看这里</a></p><p>把 Origin Certificate 保存为： your-domain.pem</p><p>把 Private Key 保存为： your-domain.key</p><h2 id="配置-nginx-转发规则"><a href="#配置-nginx-转发规则" class="headerlink" title="配置 nginx 转发规则"></a>配置 nginx 转发规则</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> alist.wukaige.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /path/to/your-domain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /path/to/your-domain.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$scheme</span> != <span class="string">&quot;https&quot;</span>) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">10000m</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:7080;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto https;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重启-nginx-服务"><a href="#重启-nginx-服务" class="headerlink" title="重启 nginx 服务"></a>重启 nginx 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> alist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 数据导入之 tidb lightning</title>
      <link href="/ES-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B9%8B-tidb-lightning/"/>
      <url>/ES-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B9%8B-tidb-lightning/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://docs.pingcap.com/zh/tidb/stable/tidb-lightning-overview">TiDB Lightning</a> 是用于从静态文件导入 TB 级数据到 TiDB 集群的工具，常用于 TiDB 集群的初始化数据导入。</p></blockquote><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>突然发现初始化 TIDB 数据库的时候漏掉了一个表，还好有备份，现在需要从静态备份里面导入漏掉的那个表。</p><h2 id="编辑-tidb-lightning-配置文件"><a href="#编辑-tidb-lightning-配置文件" class="headerlink" title="编辑 tidb-lightning 配置文件"></a>编辑 tidb-lightning 配置文件</h2><p><u>tidb-lightning.toml</u></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[lightning]</span></span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line"><span class="attr">level</span> = <span class="string">&quot;info&quot;</span></span><br><span class="line"><span class="attr">file</span> = <span class="string">&quot;log/tidb-lightning.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[tikv-importer]</span></span><br><span class="line"><span class="comment"># 选择使用的导入模式</span></span><br><span class="line"><span class="attr">backend</span> = <span class="string">&quot;tidb&quot;</span></span><br><span class="line"><span class="comment"># 设置排序的键值对的临时存放地址，目标路径需要是一个空目录</span></span><br><span class="line"><span class="attr">sorted-kv-dir</span> = <span class="string">&quot;/tmp/sorted-kv-dir&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mydumper]</span></span><br><span class="line"><span class="comment"># 源数据目录。</span></span><br><span class="line"><span class="attr">data-source-dir</span> = <span class="string">&quot;/path/to/data/exported/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置通配符规则，默认规则会过滤 mysql、sys、INFORMATION_SCHEMA、PERFORMANCE_SCHEMA、METRICS_SCHEMA、INSPECTION_SCHEMA 系统数据库下的所有表</span></span><br><span class="line"><span class="comment"># 若不配置该项，导入系统表时会出现“找不到 schema”的异常</span></span><br><span class="line"><span class="attr">filter</span> = [<span class="string">&#x27;*.*&#x27;</span>, <span class="string">&#x27;!mysql.*&#x27;</span>, <span class="string">&#x27;!sys.*&#x27;</span>, <span class="string">&#x27;!INFORMATION_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!PERFORMANCE_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!METRICS_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!INSPECTION_SCHEMA.*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="section">[mydumper.csv]</span></span><br><span class="line"><span class="comment"># 字段分隔符，支持一个或多个字符，默认值为 &#x27;,&#x27;。如果数据中可能有逗号，建议源文件导出时分隔符使用非常见组合字符例如&#x27;|+|&#x27;。</span></span><br><span class="line"><span class="attr">separator</span> = <span class="string">&#x27;|+|&#x27;</span></span><br><span class="line"><span class="comment"># 引用定界符，设置为空表示字符串未加引号。</span></span><br><span class="line"><span class="attr">delimiter</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 行尾定界字符，支持一个或多个字符。设置为空（默认值）表示 &quot;\n&quot;（换行）和 &quot;\r\n&quot; （回车+换行），均表示行尾。</span></span><br><span class="line"><span class="attr">terminator</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># CSV 文件是否包含表头。</span></span><br><span class="line"><span class="comment"># 如果为 true，首行将会被跳过，且基于首行映射目标表的列。</span></span><br><span class="line"><span class="attr">header</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># CSV 是否包含 NULL。</span></span><br><span class="line"><span class="comment"># 如果为 true，CSV 文件的任何列都不能解析为 NULL。</span></span><br><span class="line"><span class="attr">not-null</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 如果 `not-null` 为 false（即 CSV 可以包含 NULL），</span></span><br><span class="line"><span class="comment"># 为以下值的字段将会被解析为 NULL。</span></span><br><span class="line"><span class="attr">null</span> = <span class="string">&#x27;\N&#x27;</span></span><br><span class="line"><span class="comment"># 是否解析字段内的反斜线转义符。</span></span><br><span class="line"><span class="attr">backslash-escape</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否移除以分隔符结束的行。</span></span><br><span class="line"><span class="attr">trim-last-separator</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[tidb]</span></span><br><span class="line"><span class="comment"># 目标集群的信息</span></span><br><span class="line"><span class="attr">host</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">4011</span></span><br><span class="line"><span class="attr">user</span> = <span class="string">&quot;root&quot;</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;[your password]&quot;</span></span><br><span class="line"><span class="comment"># 表架构信息在从 TiDB 的“状态端口”获取。</span></span><br><span class="line"><span class="attr">status-port</span> = <span class="number">15080</span></span><br><span class="line"><span class="comment"># 集群 pd 的地址</span></span><br><span class="line"><span class="attr">pd-addr</span> = <span class="string">&quot;127.0.0.1:2079&quot;</span></span><br></pre></td></tr></table></figure><h2 id="启动-tidb-lightning"><a href="#启动-tidb-lightning" class="headerlink" title="启动 tidb-lightning"></a>启动 tidb-lightning</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup tidb-lightning -config tidb-lightning.toml</span><br></pre></td></tr></table></figure><p>导入成功你会看到下面的输出：<br><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230717113854601.png" alt="image-20230717113854601"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 数据导入之 logstash</title>
      <link href="/ES-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B9%8B-logstash/"/>
      <url>/ES-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E4%B9%8B-logstash/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.elastic.co/cn/logstash/">Logstash</a> 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。</p></blockquote><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>新建了一个 ES 索引，需要从 TIDB 导入一些数据到 ES 索引中。</p><ul><li>ES 索引名： index_test</li><li>tidb 地址： 127.0.0.1:4000</li><li>es 地址： 127.0.0.1:9200, 127.0.0.1:9201, 127.0.0.1:9202</li></ul><h2 id="下载-mysql-connector-java-8-0-21-jar-包"><a href="#下载-mysql-connector-java-8-0-21-jar-包" class="headerlink" title="下载 mysql-connector-java-8.0.21.jar 包"></a>下载 mysql-connector-java-8.0.21.jar 包</h2><p>下载链接： <a href="https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.21/mysql-connector-java-8.0.21.jar">https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.21/mysql-connector-java-8.0.21.jar</a></p><h2 id="创建-Logstash-configuration-文件"><a href="#创建-Logstash-configuration-文件" class="headerlink" title="创建 Logstash configuration 文件"></a>创建 Logstash configuration 文件</h2><p><u>tidb-to-es.tml</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    jdbc &#123;</span><br><span class="line">      jdbc_driver_library =&gt; &#x27;/path/to/mysql-connector-java-8.0.21.jar&#x27;</span><br><span class="line">      jdbc_driver_class =&gt; &#x27;com.mysql.cj.jdbc.Driver&#x27;</span><br><span class="line">        jdbc_connection_string =&gt; &#x27;jdbc:mysql://127.0.0.1:4000/LawDB?useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true&amp;autoReconnect=true&#x27;</span><br><span class="line">        jdbc_user =&gt; &#x27;root&#x27;</span><br><span class="line">        jdbc_password =&gt; &#x27;[password]&#x27;</span><br><span class="line">        jdbc_validate_connection =&gt; true</span><br><span class="line">        # jdbc_paging_enabled =&gt; &#x27;true&#x27;</span><br><span class="line">        # jdbc_page_size =&gt; &#x27;100&#x27;</span><br><span class="line">        jdbc_default_timezone =&gt; &#x27;Asia/Shanghai&#x27;</span><br><span class="line">      statement =&gt; &#x27;select id,title,content from [your table] where id &lt;= 10000&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&#x27;@version&#x27;, &#x27;@timestamp&#x27;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">      codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [ &#x27;http://127.0.0.1:9200&#x27;, &#x27;http://127.0.0.1:9201&#x27;, &#x27;http://127.0.0.1:9202&#x27; ]</span><br><span class="line">      index =&gt; &#x27;index_test&#x27;</span><br><span class="line">      action =&gt; &#x27;create&#x27;</span><br><span class="line">      document_id =&gt; &#x27;%&#123;id&#125;&#x27;</span><br><span class="line">      cacert =&gt; &#x27;/home/[USER]/elasticsearch-8.5.3/config/certs/http_ca.crt&#x27;</span><br><span class="line">      user =&gt; &quot;elastic&quot;</span><br><span class="line">      password =&gt; &quot;[elastic password]&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开始导入数据"><a href="#开始导入数据" class="headerlink" title="开始导入数据"></a>开始导入数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f /path/to/tidb-to-es.conf</span><br></pre></td></tr></table></figure><h2 id="分页处理"><a href="#分页处理" class="headerlink" title="分页处理"></a>分页处理</h2><p>当数据量很大的时候，Logstash 可自动分页导入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jdbc_paging_enabled =&gt; &#x27;true&#x27;</span><br><span class="line">jdbc_page_size =&gt; &#x27;100&#x27;</span><br></pre></td></tr></table></figure><p>但是 ES 分页语句效率极其低下，于是自己写了个脚本分页</p><p><u>paging.sh</u></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"></span><br><span class="line">table_name=<span class="string">&quot;[your table]&quot;</span></span><br><span class="line">index_name=<span class="string">&quot;[your index]&quot;</span></span><br><span class="line"><span class="built_in">limit</span>=10000</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="variable">$1</span>..<span class="variable">$2</span>&#125;; <span class="keyword">do</span></span><br><span class="line">  [[ -e <span class="string">&quot;./stop&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span> <span class="variable">$i</span> <span class="variable">$2</span>&quot;</span> &gt;&gt; <span class="string">&quot;./stop&quot;</span> &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">  offset=$(( <span class="variable">$i</span> * <span class="variable">$limit</span> ))</span><br><span class="line">  text=<span class="string">&quot;input &#123;</span></span><br><span class="line"><span class="string">    jdbc &#123;</span></span><br><span class="line"><span class="string">      jdbc_driver_library =&gt; &#x27;/path/to/mysql-connector-java-8.0.21.jar&#x27;</span></span><br><span class="line"><span class="string">      jdbc_driver_class =&gt; &#x27;com.mysql.cj.jdbc.Driver&#x27;</span></span><br><span class="line"><span class="string">      jdbc_connection_string =&gt; &#x27;jdbc:mysql://127.0.0.1:4000/LawDB?useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true&amp;autoReconnect=true&#x27;</span></span><br><span class="line"><span class="string">      jdbc_user =&gt; &#x27;root&#x27;</span></span><br><span class="line"><span class="string">      jdbc_password =&gt; &#x27;[passwd]&#x27;</span></span><br><span class="line"><span class="string">      jdbc_validate_connection =&gt; true</span></span><br><span class="line"><span class="string">      # jdbc_paging_enabled =&gt; &#x27;true&#x27;</span></span><br><span class="line"><span class="string">      # jdbc_page_size =&gt; &#x27;10000&#x27;</span></span><br><span class="line"><span class="string">      jdbc_default_timezone =&gt; &#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">      statement =&gt; &#x27;select id,section_head,section_party,section_litigation,section_truth,section_reason,section_result from <span class="variable">$table_name</span> where id &gt; <span class="variable">$offset</span> order by id limit <span class="variable">$limit</span>&#x27;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  filter &#123;</span></span><br><span class="line"><span class="string">    mutate &#123;</span></span><br><span class="line"><span class="string">      remove_field =&gt; [&#x27;@version&#x27;, &#x27;@timestamp&#x27;]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  output &#123;</span></span><br><span class="line"><span class="string">      stdout &#123;</span></span><br><span class="line"><span class="string">        codec =&gt; rubydebug</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">  elasticsearch &#123;</span></span><br><span class="line"><span class="string">        hosts =&gt; [ &#x27;http://127.0.0.1:9200&#x27;, &#x27;http://127.0.0.1:9201&#x27;, &#x27;http://127.0.0.1:9202&#x27; ]</span></span><br><span class="line"><span class="string">        index =&gt; &#x27;<span class="variable">$index_name</span>&#x27;</span></span><br><span class="line"><span class="string">        action =&gt; &#x27;create&#x27;</span></span><br><span class="line"><span class="string">        document_id =&gt; &#x27;%&#123;id&#125;&#x27;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  &quot;</span></span><br><span class="line">  /path/to/logstash -w 10 --path.data <span class="string">&quot;/tmp/logstash-<span class="variable">$1</span>-<span class="variable">$2</span>&quot;</span> -e <span class="string">&quot;<span class="variable">$text</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>导入 100W 数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paging.sh 0 100</span><br></pre></td></tr></table></figure><p>想暂停 logstash，只需在脚本目录建立一个 stop 空文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> stop</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ES </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 双网卡做 bond0</title>
      <link href="/linux-%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%81%9A-bond0/"/>
      <url>/linux-%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%81%9A-bond0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了提供网络的高可用性，我们可能需要将多块网卡绑定成一块虚拟网卡对外提供服务，这样即使其中的一块物理网卡出现故障，也不会导致连接中断。</p></blockquote><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>服务器配置了两张网卡，现在需要做 bond0。</p><p>网关: 192.168.0.1<br>网卡一: eno8303 (192.168.0.2)<br>网卡二: eno8403 (192.168.0.3)</p><h2 id="创建-bond0"><a href="#创建-bond0" class="headerlink" title="创建 bond0"></a>创建 bond0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli con add <span class="built_in">type</span> bond con-name bond0 ifname bond0 mode 802.3ad miimon 100 updelay 200 downdelay 200</span><br></pre></td></tr></table></figure><h2 id="绑定网卡到-bond0"><a href="#绑定网卡到-bond0" class="headerlink" title="绑定网卡到 bond0"></a>绑定网卡到 bond0</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli con add <span class="built_in">type</span> ethernet con-name bond0-slave1 ifname eno8303 master bond0</span><br><span class="line">sudo nmcli con add <span class="built_in">type</span> ethernet con-name bond0-slave2 ifname eno8403 master bond0</span><br></pre></td></tr></table></figure><h2 id="修改-bond0-配置"><a href="#修改-bond0-配置" class="headerlink" title="修改 bond0 配置"></a>修改 bond0 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli con mod bond0 ipv4.addresses <span class="string">&quot;192.168.0.100/24&quot;</span></span><br><span class="line">sudo nmcli con mod bond0 ipv4.gateway <span class="string">&quot;192.168.0.1&quot;</span></span><br><span class="line">sudo nmcli con mod bond0 ipv4.dns <span class="string">&quot;223.5.5.5&quot;</span></span><br><span class="line">sudo nmcli con mod bond0 ipv4.method manual</span><br><span class="line">sudo nmcli con mod bond0 connection.autoconnect <span class="built_in">yes</span></span><br><span class="line">sudo nmcli con up bond0</span><br><span class="line">sudo nmcli con up bond0-slave1</span><br><span class="line">sudo nmcli con up bond0-slave2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 bond0</span></span><br><span class="line"><span class="comment"># sudo nmcli con delete bond0</span></span><br></pre></td></tr></table></figure><h2 id="修改系统-route"><a href="#修改系统-route" class="headerlink" title="修改系统 route"></a>修改系统 route</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ip route add default via 192.168.0.1 dev bond0 proto static metric 300</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DM 数据复制</title>
      <link href="/DM-%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/"/>
      <url>/DM-%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://docs.pingcap.com/zh/tidb/stable/dm-overview">TiDB Data Migration</a> (DM) 是一款便捷的数据迁移工具，支持从与 MySQL 协议兼容的数据库（MySQL、MariaDB、Aurora MySQL）到 TiDB 的全量数据迁移和增量数据同步。使用 DM 工具有利于简化数据迁移过程，降低数据迁移运维成本。</p></blockquote><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>新建立了一个 tidb 多节点集群，现在需要从 tidb 单节点集群迁移数据到新集群。</p><h2 id="部署-DM-集群"><a href="#部署-DM-集群" class="headerlink" title="部署 DM 集群"></a>部署 DM 集群</h2><p>安装 dmctl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh</span><br><span class="line">tiup install dm dmctl</span><br></pre></td></tr></table></figure><p>生成 DM 集群最小拓扑文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup dm template</span><br></pre></td></tr></table></figure><p>复制输出的配置信息，修改 IP 地址后保存为 <u>topology.yaml</u> 文件，使用 TiUP 部署 DM 集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup dm deploy dm-test 6.0.0 topology.yaml -p</span><br></pre></td></tr></table></figure><h2 id="准备数据源"><a href="#准备数据源" class="headerlink" title="准备数据源"></a>准备数据源</h2><p>创建数据源文件 <u>mysql-01.yaml</u></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据源 ID，在数据迁移任务配置和 dmctl 命令行中引用该 source-id 可以关联到对应的数据源</span></span><br><span class="line"><span class="attr">source-id:</span> <span class="string">&quot;mysql-01&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">from:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&quot;root&quot;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;fCxfQ9XKCezSzuCD0Wf5dUD+LsKegSg=&quot;</span>  <span class="comment"># 使用 tiup dmctl --encrypt &quot;123456&quot; 加密。</span></span><br></pre></td></tr></table></figure><p>使用如下命令将数据源增加至 DM 集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tiup dm display dm-main -R dm-master 命令可查看 --master-addr 地址</span></span><br><span class="line">tiup dmctl --master-addr http://127.0.0.1:8761 operate-source create mysql-01.yaml</span><br></pre></td></tr></table></figure><h2 id="创建数据同步任务"><a href="#创建数据同步任务" class="headerlink" title="创建数据同步任务"></a>创建数据同步任务</h2><p>创建任务的配置文件 <u>mysql-to-tidb.yaml</u></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## ********* 任务信息配置 *********</span></span><br><span class="line">name: mysql-to-tidb</span><br><span class="line">shard-mode: <span class="string">&quot;&quot;</span>                       <span class="comment"># 默认值为 &quot;&quot; 即无需协调。如果为分库分表合并任务，请设置为悲观协调模式 &quot;pessimistic&quot;。在深入了解乐观协调模式的原理和使用限制后，也可以设置为乐观协调模式 &quot;optimistic&quot;</span></span><br><span class="line">task-mode: <span class="string">&quot;full&quot;</span>                    <span class="comment"># 任务模式，可设为 &quot;full&quot; - &quot;只进行全量数据迁移&quot;、&quot;incremental&quot; - &quot;Binlog 实时同步&quot;、&quot;all&quot; - &quot;全量 + Binlog 迁移&quot;</span></span><br><span class="line"><span class="comment"># timezone: &quot;UTC&quot;                    # 指定数据迁移任务时 SQL Session 使用的时区。DM 默认使用目标库的全局时区配置进行数据迁移，并且自动确保同步数据的正确性。使用自定义时区依然可以确保整个流程的正确性，但一般不需要手动指定。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ******** 数据源配置 **********</span></span><br><span class="line">mysql-instances:</span><br><span class="line">  - source-id: <span class="string">&quot;mysql-01&quot;</span>           <span class="comment"># 从数据源 mysql-01 迁移数据</span></span><br><span class="line">    block-allow-list:  <span class="string">&quot;bw-rule-1&quot;</span></span><br><span class="line">    filter-rules: [<span class="string">&quot;filter-rule-1&quot;</span>]</span><br><span class="line">    route-rules: [<span class="string">&quot;route-rule-1&quot;</span>]</span><br><span class="line"></span><br><span class="line">    mydumper-config-name: <span class="string">&quot;global&quot;</span>   <span class="comment"># mydumpers 配置的名称</span></span><br><span class="line">    loader-config-name: <span class="string">&quot;global&quot;</span>     <span class="comment"># loaders 配置的名称</span></span><br><span class="line">    syncer-config-name: <span class="string">&quot;global&quot;</span>     <span class="comment"># syncers 配置的名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ******** 目标 TiDB 配置 **********</span></span><br><span class="line">target-database:       <span class="comment"># 目标 TiDB 配置</span></span><br><span class="line">  host: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">  port: 3306</span><br><span class="line">  user: <span class="string">&quot;root&quot;</span></span><br><span class="line">  <span class="comment"># 如果密码不为空，则推荐使用经过 dmctl 加密的密文</span></span><br><span class="line">  password: <span class="string">&quot;fCxfQ9XKCezSzuCD0Wf5dUD+LsKegSg=&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">## ******** 功能配置 **********</span></span><br><span class="line">mydumpers:                           <span class="comment"># dump 处理单元的运行配置参数</span></span><br><span class="line">  global:                            <span class="comment"># 配置名称</span></span><br><span class="line">    threads: 4                       <span class="comment"># dump 处理单元从上游数据库实例导出数据和 check-task 访问上游的线程数量，默认值为 4</span></span><br><span class="line">    chunk-filesize: 64               <span class="comment"># dump 处理单元生成的数据文件大小，默认值为 64，单位为 MB</span></span><br><span class="line">    extra-args: <span class="string">&quot;--consistency none&quot;</span> <span class="comment"># dump 处理单元的其他参数，不需要在 extra-args 中配置 table-list，DM 会自动生成</span></span><br><span class="line"></span><br><span class="line">loaders:                             <span class="comment"># load 处理单元的运行配置参数</span></span><br><span class="line">  global:                            <span class="comment"># 配置名称</span></span><br><span class="line">    pool-size: 16                    <span class="comment"># load 处理单元并发执行 dump 处理单元的 SQL 文件的线程数量，默认值为 16，当有多个实例同时向 TiDB 迁移数据时可根据负载情况适当调小该值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存上游全量导出数据的目录。该配置项的默认值为 &quot;./dumped_data&quot;。</span></span><br><span class="line">    <span class="comment"># 支持配置为本地文件系统路径，也支持配置为 Amazon S3 路径，如: s3://dm_bucket/dumped_data?endpoint=s3-website.us-east-2.amazonaws.com&amp;access_key=s3accesskey&amp;secret_access_key=s3secretkey&amp;force_path_style=true</span></span><br><span class="line">    <span class="built_in">dir</span>: <span class="string">&quot;./dumped_data&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 全量阶段数据导入的模式。可以设置为如下几种模式：</span></span><br><span class="line">    <span class="comment"># - &quot;sql&quot;(默认)。使用 [TiDB Lightning](/tidb-lightning/tidb-lightning-overview.md) TiDB-backend 进行导入。</span></span><br><span class="line">    <span class="comment"># - &quot;loader&quot;。使用 Loader 导入。此模式仅作为兼容模式保留，目前用于支持 TiDB Lightning 尚未包含的功能，预计会在后续的版本废弃。</span></span><br><span class="line">    import-mode: <span class="string">&quot;sql&quot;</span></span><br><span class="line">    <span class="comment"># 全量导入阶段针对冲突数据的解决方式：</span></span><br><span class="line">    <span class="comment"># - &quot;replace&quot;（默认值）。仅支持 import-mode 为 &quot;sql&quot;，表示用最新数据替代已有数据。</span></span><br><span class="line">    <span class="comment"># - &quot;ignore&quot;。仅支持 import-mode 为 &quot;sql&quot;，保留已有数据，忽略新数据。</span></span><br><span class="line">    <span class="comment"># - &quot;error&quot;。仅支持 import-mode 为 &quot;loader&quot;。插入重复数据时报错并停止同步任务。</span></span><br><span class="line">    on-duplicate: <span class="string">&quot;replace&quot;</span></span><br><span class="line"></span><br><span class="line">syncers:                             <span class="comment"># sync 处理单元的运行配置参数</span></span><br><span class="line">  global:                            <span class="comment"># 配置名称</span></span><br><span class="line">    worker-count: 16                 <span class="comment"># 应用已传输到本地的 binlog 的并发线程数量，默认值为 16。调整此参数不会影响上游拉取日志的并发，但会对下游产生显著压力。</span></span><br><span class="line">    batch: 100                       <span class="comment"># sync 迁移到下游数据库的一个事务批次 SQL 语句数，默认值为 100，建议一般不超过 500。</span></span><br><span class="line">    enable-ansi-quotes: <span class="literal">true</span>         <span class="comment"># 若 `session` 中设置 `sql-mode: &quot;ANSI_QUOTES&quot;`，则需开启此项</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置为 true，则将来自上游的 `INSERT` 改写为 `REPLACE`，将 `UPDATE` 改写为 `DELETE` 与 `REPLACE`，保证在表结构中存在主键或唯一索引的条件下迁移数据时可以重复导入 DML。</span></span><br><span class="line">    safe-mode: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 自动安全模式的持续时间</span></span><br><span class="line">    <span class="comment"># 如不设置或者设置为 &quot;&quot;，则默认为 `checkpoint-flush-interval`（默认为 30s）的两倍，即 60s。</span></span><br><span class="line">    <span class="comment"># 如设置为 &quot;0s&quot;，则在 DM 自动进入安全模式的时候报错。</span></span><br><span class="line">    <span class="comment"># 如设置为正常值，例如 &quot;1m30s&quot;，则在该任务异常暂停、记录 `safemode_exit_point` 失败、或是 DM 进程异常退出时，把安全模式持续时间调整为 1 分 30 秒。详情可见[自动开启安全模式](https://docs.pingcap.com/zh/tidb/stable/dm-safe-mode#自动开启)。</span></span><br><span class="line">    safe-mode-duration: <span class="string">&quot;60s&quot;</span></span><br><span class="line">    <span class="comment"># 设置为 true，DM 会在不增加延迟的情况下，尽可能地将上游对同一条数据的多次操作压缩成一次操作。</span></span><br><span class="line">    <span class="comment"># 如 INSERT INTO tb(a,b) VALUES(1,1); UPDATE tb SET b=11 WHERE a=1; 会被压缩成 INSERT INTO tb(a,b) VALUES(1,11); 其中 a 为主键</span></span><br><span class="line">    <span class="comment"># 如 UPDATE tb SET b=1 WHERE a=1; UPDATE tb(a,b) SET b=2 WHERE a=1; 会被压缩成 UPDATE tb(a,b) SET b=2 WHERE a=1; 其中 a 为主键</span></span><br><span class="line">    <span class="comment"># 如 DELETE FROM tb WHERE a=1; INSERT INTO tb(a,b) VALUES(1,1); 会被压缩成 REPLACE INTO tb(a,b) VALUES(1,1); 其中 a 为主键</span></span><br><span class="line">    compact: <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 设置为 true，DM 会尽可能地将多条同类型的语句合并到一条语句中，生成一条带多行数据的 SQL 语句。</span></span><br><span class="line">    <span class="comment"># 如 INSERT INTO tb(a,b) VALUES(1,1); INSERT INTO tb(a,b) VALUES(2,2); 会变成 INSERT INTO tb(a,b) VALUES(1,1),(2,2);</span></span><br><span class="line">    <span class="comment"># 如 UPDATE tb SET b=11 WHERE a=1; UPDATE tb(a,b) set b=22 WHERE a=2; 会变成 INSERT INTO tb(a,b) VALUES(1,11),(2,22) ON DUPLICATE KEY UPDATE a=VALUES(a), b=VALUES(b); 其中 a 为主键</span></span><br><span class="line">    <span class="comment"># 如 DELETE FROM tb WHERE a=1; DELETE FROM tb WHERE a=2 会变成 DELETE FROM tb WHERE (a) IN (1),(2)；其中 a 为主键</span></span><br><span class="line">    multiple-rows: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">block-allow-list:</span><br><span class="line">  <span class="comment"># 规则名称</span></span><br><span class="line">  bw-rule-1:</span><br><span class="line">    <span class="comment"># 迁移哪些库，支持通配符 &quot;*&quot; 和 &quot;?&quot;，do-dbs 和 ignore-dbs 只需要配置一个，如果两者同时配置只有 do-dbs 会生效</span></span><br><span class="line">    do-dbs: [<span class="string">&quot;DATABASE&quot;</span>]         </span><br><span class="line">    <span class="comment"># ignore-dbs: [&quot;mysql&quot;, &quot;account&quot;] # 忽略哪些库，支持通配符 &quot;*&quot; 和 &quot;?&quot;</span></span><br><span class="line">    do-tables:                                  <span class="comment"># 迁移哪些表，do-tables 和 ignore-tables 只需要配置一个，如果两者同时配置只有 do-tables 会生效</span></span><br><span class="line">    - db-name: <span class="string">&quot;DATABASE&quot;</span></span><br><span class="line">      tbl-name: <span class="string">&quot;YOUR TABLE&quot;</span></span><br><span class="line"></span><br><span class="line">filters:                                        <span class="comment"># 定义过滤数据源特定操作的规则，可以定义多个规则</span></span><br><span class="line">  filter-rule-1:                                <span class="comment"># 规则名称</span></span><br><span class="line">    schema-pattern: <span class="string">&quot;DATABASE&quot;</span>                     <span class="comment"># 匹配数据源的库名，支持通配符 &quot;*&quot; 和 &quot;?&quot;</span></span><br><span class="line">    table-pattern: <span class="string">&quot;YOUR TABLE&quot;</span>                  <span class="comment"># 匹配数据源的表名，支持通配符 &quot;*&quot; 和 &quot;?&quot;</span></span><br><span class="line">    events: [<span class="string">&quot;truncate table&quot;</span>, <span class="string">&quot;drop table&quot;</span>]    <span class="comment"># 匹配上 schema-pattern 和 table-pattern 的库或者表的操作类型</span></span><br><span class="line">    action: Ignore                              <span class="comment"># 迁移（Do）还是忽略(Ignore)</span></span><br><span class="line"></span><br><span class="line">routes:                                         <span class="comment"># 定义数据源表迁移到目标 TiDB 表的路由规则，可以定义多个规则</span></span><br><span class="line">  route-rule-1:                                 <span class="comment"># 规则名称</span></span><br><span class="line">    schema-pattern: <span class="string">&quot;DATABASE&quot;</span>                     <span class="comment"># 匹配数据源的库名，支持通配符 &quot;*&quot; 和 &quot;?&quot;</span></span><br><span class="line">    table-pattern: <span class="string">&quot;YOUR TABLE&quot;</span>                  <span class="comment"># 匹配数据源的表名，支持通配符 &quot;*&quot; 和 &quot;?&quot;</span></span><br><span class="line">    target-schema: <span class="string">&quot;DATABASE&quot;</span>                      <span class="comment"># 目标 TiDB 库名</span></span><br><span class="line">    target-table: <span class="string">&quot;YOUR TABLE&quot;</span>                   <span class="comment"># 目标 TiDB 表名</span></span><br></pre></td></tr></table></figure><p>启动任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup dmctl --master-addr http://127.0.0.1:8761 start-task mysql-to-tidb.yaml</span><br></pre></td></tr></table></figure><p>查询任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup dmctl --master-addr http://127.0.0.1:8761 query-status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIDB 多物理机集群部署</title>
      <link href="/TIDB-%E5%A4%9A%E7%89%A9%E7%90%86%E6%9C%BA%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>/TIDB-%E5%A4%9A%E7%89%A9%E7%90%86%E6%9C%BA%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>买了三台服务器，内网 IP 如下：</p><ul><li>192.168.70.50</li><li>192.168.70.51</li><li>192.168.70.52</li></ul><p>想搭建一个 TIDB 集群，只要有一台机器存活就能正常对外提供服务。</p><h2 id="服务器环境准备"><a href="#服务器环境准备" class="headerlink" title="服务器环境准备"></a>服务器环境准备</h2><p>关闭系统 SWAP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;vm.swappiness = 0&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line">sudo swapoff -a</span><br></pre></td></tr></table></figure><p>禁用 THP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> never | sudo <span class="built_in">tee</span> /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="built_in">echo</span> never | sudo <span class="built_in">tee</span> /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><p>配置网络参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;fs.file-max = 1000000&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.somaxconn = 32768&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_tw_recycle = 0&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_syncookies = 0&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;vm.overcommit_memory = 1&quot;</span> |sudo <span class="built_in">tee</span> -a /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><p>配置 tidb 用户的打开文件句柄限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF | sudo tee -a /etc/security/limits.conf</span></span><br><span class="line"><span class="string">tidb           soft    nofile          1000000</span></span><br><span class="line"><span class="string">tidb           hard    nofile          1000000</span></span><br><span class="line"><span class="string">tidb           soft    stack           32768</span></span><br><span class="line"><span class="string">tidb           hard    stack           32768</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>将 CPU 频率调频模式从 powersave 设置为 performance</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;performance&quot;</span> | sudo <span class="built_in">tee</span> /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</span><br></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redhat</span></span><br><span class="line">sudo systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>禁用 SELinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&#x27;s/SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><p>mount disk with noatime</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -o remount,noatime /path/to/your/datadir</span><br></pre></td></tr></table></figure><h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h2><p>编写集群拓扑文件: <u>topology.yaml</u></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># # Global variables are applied to all deployments and used as the default value of</span></span><br><span class="line"><span class="comment"># # the deployments if a specific deployment value is missing.</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&quot;tidb&quot;</span></span><br><span class="line">  <span class="attr">ssh_port:</span> <span class="number">22</span></span><br><span class="line">  <span class="attr">deploy_dir:</span> <span class="string">&quot;/SSD/tidb-deploy&quot;</span></span><br><span class="line">  <span class="attr">data_dir:</span> <span class="string">&quot;/SSD/tidb-data&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">monitored:</span></span><br><span class="line">  <span class="attr">node_exporter_port:</span> <span class="number">9800</span></span><br><span class="line">  <span class="attr">blackbox_exporter_port:</span> <span class="number">9815</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server_configs:</span></span><br><span class="line">  <span class="attr">tidb:</span></span><br><span class="line">    <span class="attr">log.slow-threshold:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">performance.txn-entry-size-limit:</span> <span class="number">8388608</span>    <span class="comment"># 8M</span></span><br><span class="line">  <span class="attr">tikv:</span></span><br><span class="line">    <span class="attr">storage.block-cache.shared:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">readpool.storage.use-unified-pool:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">readpool.coprocessor.use-unified-pool:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">raftstore.raft-entry-max-siz:</span> <span class="string">&quot;8MB&quot;</span></span><br><span class="line">  <span class="attr">pd:</span></span><br><span class="line">    <span class="attr">replication.location-labels:</span> [<span class="string">&quot;host&quot;</span>]</span><br><span class="line">    <span class="attr">replication.max-replicas:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">schedule.leader-schedule-limit:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">schedule.region-schedule-limit:</span> <span class="number">2048</span></span><br><span class="line">    <span class="attr">schedule.replica-schedule-limit:</span> <span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pd_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">client_port:</span> <span class="number">2079</span></span><br><span class="line">    <span class="attr">peer_port:</span> <span class="number">2080</span></span><br><span class="line">  <span class="comment"># deploy_dir: &quot;/home/tidb/tidb-deploy/pd-2079&quot;</span></span><br><span class="line">    <span class="comment"># data_dir: &quot;/home/tidb/tidb-data/pd-2079&quot;</span></span><br><span class="line">    <span class="comment"># log_dir: &quot;/home/tidb/tidb-deploy/pd-2079/log&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">client_port:</span> <span class="number">2079</span></span><br><span class="line">    <span class="attr">peer_port:</span> <span class="number">2080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">client_port:</span> <span class="number">2079</span></span><br><span class="line">    <span class="attr">peer_port:</span> <span class="number">2080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tidb_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4011</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17080</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4012</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17081</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4011</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17080</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4012</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17081</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4011</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17080</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tidb-4011/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">4012</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">17081</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tikv_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27160</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27180</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">data_dir:</span> <span class="string">&quot;/home/tidb/tidb-data/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv1&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;50GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27161</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27181</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv1&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;50GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27160</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27180</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">data_dir:</span> <span class="string">&quot;/home/tidb/tidb-data/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv2&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;30GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27161</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27181</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv2&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;30GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27160</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27180</span></span><br><span class="line">    <span class="attr">deploy_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">data_dir:</span> <span class="string">&quot;/home/tidb/tidb-data/tikv-27160&quot;</span></span><br><span class="line">    <span class="attr">log_dir:</span> <span class="string">&quot;/home/tidb/tidb-deploy/tikv-27160/log&quot;</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv3&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;30GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">27161</span></span><br><span class="line">    <span class="attr">status_port:</span> <span class="number">27181</span></span><br><span class="line">    <span class="attr">numa_node:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server.labels:</span> &#123; <span class="attr">host:</span> <span class="string">&quot;tikv3&quot;</span> &#125;</span><br><span class="line">      <span class="attr">readpool.unified.max-thread-count:</span> <span class="number">25</span></span><br><span class="line">      <span class="attr">storage.block-cache.capacity:</span> <span class="string">&quot;30GiB&quot;</span></span><br><span class="line">      <span class="attr">raftstore.capacity:</span> <span class="string">&quot;2048GiB&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cdc_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.50</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">    <span class="attr">gc-ttl:</span> <span class="number">88400</span></span><br><span class="line">    <span class="comment">#ticdc_cluster_id: &quot;cluster0&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.51</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">    <span class="attr">gc-ttl:</span> <span class="number">88400</span></span><br><span class="line">    <span class="comment">#ticdc_cluster_id: &quot;cluster0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">monitoring_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">ssh_port:</span> <span class="number">22</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9790</span></span><br><span class="line">    <span class="attr">ng_port:</span> <span class="number">14020</span></span><br><span class="line">    <span class="comment"># deploy_dir: &quot;/tidb-deploy/prometheus-8249&quot;</span></span><br><span class="line">    <span class="comment"># data_dir: &quot;/tidb-data/prometheus-8249&quot;</span></span><br><span class="line">    <span class="comment"># log_dir: &quot;/tidb-deploy/prometheus-8249/log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">grafana_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3700</span></span><br><span class="line">    <span class="comment"># deploy_dir: /tidb-deploy/grafana-3000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">alertmanager_servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.70</span><span class="number">.48</span></span><br><span class="line">    <span class="attr">ssh_port:</span> <span class="number">22</span></span><br><span class="line">    <span class="attr">web_port:</span> <span class="number">9793</span></span><br><span class="line">    <span class="attr">cluster_port:</span> <span class="number">9794</span></span><br><span class="line">    <span class="comment"># deploy_dir: &quot;/tidb-deploy/alertmanager-9093&quot;</span></span><br><span class="line">    <span class="comment"># data_dir: &quot;/tidb-data/alertmanager-9093&quot;</span></span><br><span class="line">    <span class="comment"># log_dir: &quot;/tidb-deploy/alertmanager-9093/log&quot;</span></span><br></pre></td></tr></table></figure><p>检查并修复集群配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup cluster deploy tidb-cluster v6.5.2 ./topology.yaml --user root -p</span><br></pre></td></tr></table></figure><p>部署集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup cluster deploy tidb-cluster v6.5.2 ./topology.yaml --user root -p</span><br></pre></td></tr></table></figure><p>检查集群状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup cluster display tidb-cluster</span><br></pre></td></tr></table></figure><p>开启必要端口并初始化集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redhat</span></span><br><span class="line"><span class="comment"># tiup cluster display tidb-cluster 查看需要打开的端口</span></span><br><span class="line"><span class="comment"># 可用 GPT 读取集群配置文件，写脚本开启所有端口</span></span><br><span class="line">sudo firewall-cmd --add-port=port/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">tiup cluster start tidb-cluster --init</span><br><span class="line"><span class="comment">#Started cluster `tidb-cluster` successfully</span></span><br><span class="line"><span class="comment">#The root password of TiDB database has been changed.</span></span><br><span class="line"><span class="comment">#The new password is: &#x27;passwd&#x27;.</span></span><br><span class="line"><span class="comment">#Copy and record it to somewhere safe, it is only displayed once, and will not be stored.</span></span><br></pre></td></tr></table></figure><p>连接 TIDB 数据库并修改密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 127.0.0.1 -P 4011 -u root -p<span class="string">&#x27;passwd&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt; SET PASSWORD FOR <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> = <span class="string">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tidb 快照恢复</title>
      <link href="/tidb-%E5%BF%AB%E7%85%A7%E6%81%A2%E5%A4%8D/"/>
      <url>/tidb-%E5%BF%AB%E7%85%A7%E6%81%A2%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<blockquote><p>TiDB 使用周期性运行的 GC（Garbage Collection，垃圾回收）来进行清理，默认情况下每 10 分钟一次。每次 GC 时，TiDB 会计算一个称为 safe point 的时间戳（默认为上次运行 GC 的时间减去 10 分钟），接下来 TiDB 会在保证在 safe point 之后的快照都能够读取到正确数据的前提下，删除更早的过期数据。</p></blockquote><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>公司小萌新误操作，把数据表清空。</p><h2 id="修改-GC-的生存时间"><a href="#修改-GC-的生存时间" class="headerlink" title="修改 GC 的生存时间"></a>修改 GC 的生存时间</h2><p>tidb 默认 GC 生存时间比较短，一旦删库的时间点超过这个时间就直接完犊子。</p><p>登录 tidb 数据库，查看 GC 生存时间：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.tidb <span class="keyword">where</span> variable_name <span class="operator">=</span> <span class="string">&#x27;tikv_gc_life_time&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230705175301357.png" alt="image-20230705175301357"></p><p>60 分钟，我们有 1.5 亿条数据，不太够。</p><p>设置 GC 生存时间为 72 小时：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> mysql.tidb <span class="keyword">set</span> VARIABLE_VALUE<span class="operator">=</span>&quot;72h&quot; <span class="keyword">where</span> VARIABLE_NAME<span class="operator">=</span>&quot;tikv_gc_life_time&quot;;</span><br></pre></td></tr></table></figure><h2 id="设置快照时间点"><a href="#设置快照时间点" class="headerlink" title="设置快照时间点"></a>设置快照时间点</h2><p>设置 tidb_snapshot 变量为删库前的某个时间点：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @<span class="variable">@tidb_snapshot</span><span class="operator">=</span>&quot;2023-05-30 13:10:00&quot;;</span><br></pre></td></tr></table></figure><p>设置完成之后，应该就能看到被删除的数据了，接下来需要导出导入数据。</p><h2 id="使用-tiup-dumpling-导出被删除的数据"><a href="#使用-tiup-dumpling-导出被删除的数据" class="headerlink" title="使用 tiup dumpling 导出被删除的数据"></a>使用 tiup dumpling 导出被删除的数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup dumpling -u root -P [port] -p [password] -h 127.0.0.1 -o /path/to/export/backup -r 200000 --filter <span class="string">&quot;[DataBase].[Table]&quot;</span> --snapshot <span class="string">&quot;2023-05-30 13:10:00&quot;</span></span><br></pre></td></tr></table></figure><p>数据完全导出后，可恢复 tidb_snapshot 为 <code>&quot;&quot;</code>，并删除空表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @<span class="variable">@tidb_snapshot</span><span class="operator">=</span>&quot;&quot;;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [<span class="keyword">table</span>];</span><br></pre></td></tr></table></figure><h2 id="使用-tidb-lightning-导入数据"><a href="#使用-tidb-lightning-导入数据" class="headerlink" title="使用 tidb-lightning 导入数据"></a>使用 tidb-lightning 导入数据</h2><p>创建 tidb-lightning 配置文件 <u>tidb-lightning.toml</u> ：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[lightning]</span></span><br><span class="line"><span class="comment"># 日志</span></span><br><span class="line"><span class="attr">level</span> = <span class="string">&quot;info&quot;</span></span><br><span class="line"><span class="attr">file</span> = <span class="string">&quot;log/tidb-lightning.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[tikv-importer]</span></span><br><span class="line"><span class="comment"># 选择使用的导入模式</span></span><br><span class="line"><span class="attr">backend</span> = <span class="string">&quot;tidb&quot;</span></span><br><span class="line"><span class="comment"># 设置排序的键值对的临时存放地址，目标路径需要是一个空目录</span></span><br><span class="line"><span class="attr">sorted-kv-dir</span> = <span class="string">&quot;/tmp/sorted-kv-dir&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mydumper]</span></span><br><span class="line"><span class="comment"># 源数据目录。</span></span><br><span class="line"><span class="attr">data-source-dir</span> = <span class="string">&quot;/path/to/export/backup&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置通配符规则，默认规则会过滤 mysql、sys、INFORMATION_SCHEMA、PERFORMANCE_SCHEMA、METRICS_SCHEMA、INSPECTION_SCHEMA 系统数据库下的所有表</span></span><br><span class="line"><span class="comment"># 若不配置该项，导入系统表时会出现“找不到 schema”的异常</span></span><br><span class="line"><span class="attr">filter</span> = [<span class="string">&#x27;*.*&#x27;</span>, <span class="string">&#x27;!mysql.*&#x27;</span>, <span class="string">&#x27;!sys.*&#x27;</span>, <span class="string">&#x27;!INFORMATION_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!PERFORMANCE_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!METRICS_SCHEMA.*&#x27;</span>, <span class="string">&#x27;!INSPECTION_SCHEMA.*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="section">[tidb]</span></span><br><span class="line"><span class="comment"># 目标集群的信息</span></span><br><span class="line"><span class="attr">host</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">port</span> = [port]</span><br><span class="line"><span class="attr">user</span> = <span class="string">&quot;root&quot;</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;xxxxx&quot;</span></span><br><span class="line"><span class="comment"># 表架构信息在从 TiDB 的 &quot;状态端口&quot; 获取。</span></span><br><span class="line"><span class="attr">status-port</span> = <span class="number">15080</span></span><br><span class="line"><span class="comment"># 集群 pd 的地址，可用 tiup cluster display [your cluster] 查看</span></span><br><span class="line"><span class="attr">pd-addr</span> = <span class="string">&quot;127.0.0.1:2879&quot;</span></span><br></pre></td></tr></table></figure><p>导入数据到 TIDB 数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup tidb-lightning -config tidb-lightning.toml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIKV 内存占用过高排查</title>
      <link href="/TIKV-%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E8%BF%87%E9%AB%98%E6%8E%92%E6%9F%A5/"/>
      <url>/TIKV-%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E8%BF%87%E9%AB%98%E6%8E%92%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>tidb 集群（tidb-cluster）的 tikv 节点，占用内存高达 30&#x2F;50 G，内存不够用。</p><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><p>登录 grafana 监控面板，发现 tidb-cluster-TiKV-Details 下面的 Block cache size 面板疑似有点问题。</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230705173007288.png" alt="image-20230705173007288"></p><p>遂去查看 tidb-cluster 集群的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup cluster edit-config tidb-cluster</span><br></pre></td></tr></table></figure><p>问题在于 tikv 的 <code>storage.block-cache.capacity</code> 配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage.block-cache.capacity:</span> <span class="string">50GiB</span></span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>把 tikv 的 <code>storage.block-cache.capacity</code> 配置修改成合适的值，保存配置，重启 tidb 集群即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TIDB 集群节点损坏修复</title>
      <link href="/TIDB-%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E6%8D%9F%E5%9D%8F%E4%BF%AE%E5%A4%8D/"/>
      <url>/TIDB-%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E6%8D%9F%E5%9D%8F%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>tidb 某个节点的数据目录被删除，导致节点损坏。</p><h2 id="删除损坏节点"><a href="#删除损坏节点" class="headerlink" title="删除损坏节点"></a>删除损坏节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 损坏节点 IP 为：192.168.70.51 端口为：27161</span></span><br><span class="line">tiup cluster scale-in tidb-cluster --node 192.168.70.51:27161</span><br></pre></td></tr></table></figure><h2 id="添加新的节点"><a href="#添加新的节点" class="headerlink" title="添加新的节点"></a>添加新的节点</h2><p><u>scale-out.yaml</u> 文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tikv_servers:</span><br><span class="line">  - host: 192.168.70.51</span><br><span class="line">    port: 27161</span><br><span class="line">    status_port: 27181</span><br><span class="line">    numa_node: &quot;1&quot;</span><br><span class="line">    config:</span><br><span class="line">      server.labels: &#123; host: &quot;tikv3&quot; &#125;</span><br><span class="line">      readpool.unified.max-thread-count: 25</span><br><span class="line">      storage.block-cache.capacity: &quot;30GiB&quot;</span><br><span class="line">      raftstore.capacity: &quot;2048GiB&quot;</span><br></pre></td></tr></table></figure><p>添加节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集群名称为：tidb-cluster</span></span><br><span class="line">tiup cluster scale-out tidb-cluster ./scale-out.yaml --user root -p</span><br></pre></td></tr></table></figure><h2 id="验证集群状态"><a href="#验证集群状态" class="headerlink" title="验证集群状态"></a>验证集群状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tiup cluster display tidb-cluster</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 自建博客如何被 google 收录？</title>
      <link href="/hexo-%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E8%A2%AB-google-%E6%94%B6%E5%BD%95%EF%BC%9F/"/>
      <url>/hexo-%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%A6%82%E4%BD%95%E8%A2%AB-google-%E6%94%B6%E5%BD%95%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="测试站点是否被-google-收录"><a href="#测试站点是否被-google-收录" class="headerlink" title="测试站点是否被 google 收录"></a>测试站点是否被 google 收录</h2><p>测试方法：打开 google 主页，在搜索框键入 <code>site:blog.wukaige.com</code></p><p>未被收录：</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704153416648.png" alt="image-20230704153416648"></p><p>被收录：<br><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704153457622.png" alt="image-20230704153457622"></p><h2 id="安装-hexo-generator-sitemap-插件"><a href="#安装-hexo-generator-sitemap-插件" class="headerlink" title="安装 hexo-generator-sitemap 插件"></a>安装 hexo-generator-sitemap 插件</h2><p>hexo-generator-sitemap 可自动在根目录生成 sitemap.xml 文件</p><p>安装： <code>npm install hexo-generator-sitemap --save</code></p><p>在 <u>_config.yaml</u> 文件中添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># https://github.com/hexojs/hexo-generator-sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: </span><br><span class="line">    - sitemap.xml</span><br><span class="line">    - sitemap.txt</span><br><span class="line">  rel: false</span><br><span class="line">  tags: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure><h2 id="提交站点-URL-到-Google-Search-Console"><a href="#提交站点-URL-到-Google-Search-Console" class="headerlink" title="提交站点 URL 到 Google Search Console"></a>提交站点 URL 到 Google Search Console</h2><p>打开 <a href="https://www.google.com/webmasters/tools/home#utm_source=en-wmxmsg&utm_medium=wmxmsg&utm_campaign=bm&authuser=0">Google Search Console</a> 并添加网站资源</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704153836019.png" alt="image-20230704153836019"></p><p>在下面添加你的博客 url 链接，并点击 CONTINUE，根据提示授权 Google 访问你的网站。</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704153924857.png" alt="image-20230704153924857"></p><p>这里填入自动生成的 <strong>sitemap.xml</strong> ，状态为 Success 代表添加成功。</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704154016411.png" alt="image-20230704154016411"></p><h2 id="测试-Google-Search-Console-是否配置完成"><a href="#测试-Google-Search-Console-是否配置完成" class="headerlink" title="测试 Google Search Console 是否配置完成"></a>测试 Google Search Console 是否配置完成</h2><p>在这里填入你的博客地址：</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704155013177.png" alt="image-20230704155013177"></p><p>下面是你的网站状态：</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704155054178.png" alt="image-20230704155054178"></p><p>URL is not on Google，问题不大，可能是刚刚收录还没来得及抓取你的网站。</p><p>点击右上角的 <strong>TEST LIVE URL</strong> 测试配置是否成功：</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230704155337684.png" alt="image-20230704155337684"></p><p>出现这个页面代表配置没问题。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/129022264">https://zhuanlan.zhihu.com/p/129022264</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp + nginx 实现不同子域名访问同一主机不同服务</title>
      <link href="/frp-nginx-%E5%AE%9E%E7%8E%B0%E4%B8%8D%E5%90%8C%E5%AD%90%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E5%90%8C%E4%B8%80%E4%B8%BB%E6%9C%BA%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1/"/>
      <url>/frp-nginx-%E5%AE%9E%E7%8E%B0%E4%B8%8D%E5%90%8C%E5%AD%90%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E5%90%8C%E4%B8%80%E4%B8%BB%E6%9C%BA%E4%B8%8D%E5%90%8C%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><ul><li>运行在内网的多个服务</li><li>一台带有公网 IP 的云服务器（如果是国内服务器，域名需要备案）</li><li>一个域名</li></ul><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>到 cloudflare 解析配置你的域名解析</p><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230629164727654.png" alt="image-20230629164727654"></p><h2 id="Frps-Nginx-服务配置"><a href="#Frps-Nginx-服务配置" class="headerlink" title="Frps, Nginx 服务配置"></a>Frps, Nginx 服务配置</h2><p>frps 部署 - <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>Nginx 安装 - <code>sudo apt install nginx</code></p><p>frps 配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">vhost_http_port = 7080</span><br><span class="line">token = [custom token]</span><br><span class="line"></span><br><span class="line">dashboard_port = 7050</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = changeme</span><br><span class="line"></span><br><span class="line">subdomain_host = wukaige.com</span><br></pre></td></tr></table></figure><p>nginx 配置 <u>&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;frp.conf</u></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> alist.wukaige.com;</span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">                <span class="attribute">proxy_pass</span> http://127.0.0.1:7080;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   Host             <span class="variable">$host</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   X-Real-IP        <span class="variable">$remote_addr</span>;</span><br><span class="line">                <span class="attribute">proxy_set_header</span>   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启 frps 和 nginx 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以服务方式安装的 frps</span></span><br><span class="line">sudo systemctl restart frps.service</span><br></pre></td></tr></table></figure><h2 id="Frpc-配置"><a href="#Frpc-配置" class="headerlink" title="Frpc 配置"></a>Frpc 配置</h2><p>frpc 配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = [ip to frps server]</span><br><span class="line">server_port = 7000</span><br><span class="line">token = [custom token]</span><br><span class="line"></span><br><span class="line">[alist]</span><br><span class="line">type = http</span><br><span class="line">local_port = 5244</span><br><span class="line">subdomain = alist</span><br></pre></td></tr></table></figure><p>重启 frpc 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 以服务方式安装的 frpc</span><br><span class="line">sudo systemctl restart frpc.service</span><br></pre></td></tr></table></figure><p>没有例外的话，访问 <code>alist.wukaige.com</code> 即可访问本地 alist 服务。<br>有例外的话，看看服务器和本地防火墙，是否开放需要开放的端口。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 代理 openai api</title>
      <link href="/Nginx-%E4%BB%A3%E7%90%86-openai-api/"/>
      <url>/Nginx-%E4%BB%A3%E7%90%86-openai-api/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><p>ubuntu: <code>sudo apt install nginx</code></p><h2 id="配置-Openai-反向代理"><a href="#配置-Openai-反向代理" class="headerlink" title="配置 Openai 反向代理"></a>配置 Openai 反向代理</h2><p>在目录 <code>/etc/nginx/conf.d</code> 下创建文件 <code>openai.conf</code></p><p><u>&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;openai.conf</u></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 8000;</span><br><span class="line">    </span><br><span class="line">    location /v1/ &#123;</span><br><span class="line">        proxy_pass https://api.openai.com/v1/; # OpenAI API URL</span><br><span class="line">        proxy_ssl_server_name on; # 避免出现反代https域名出现502错误</span><br><span class="line">        proxy_buffering off; # 关闭缓存实现打字机效果</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启 nginx 服务： <code>sudo systemctl reload nginx</code></p><h2 id="使用-Openai-Api-接口"><a href="#使用-Openai-Api-接口" class="headerlink" title="使用 Openai Api 接口"></a>使用 Openai Api 接口</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 requests 会话</span></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">5</span></span><br><span class="line">session = requests.session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">API_KEY = <span class="string">&quot;sk-bvUyWowek6qxxjztEMchT3Blbkfj5Xlzr27jMbX28YxGp4wh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 OpenAI API 密钥</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;API_KEY&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_request</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    发送请求到 OpenAI API 并返回响应。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = session.post(</span><br><span class="line">            <span class="string">&quot;http://[your nginx server ip address]:8000/v1/chat/completions&quot;</span>,</span><br><span class="line">            headers=headers,</span><br><span class="line">            data=json.dumps(data),</span><br><span class="line">            timeout=<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> openai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本转向量并插入到 ES 中</title>
      <link href="/%E6%96%87%E6%9C%AC%E8%BD%AC%E5%90%91%E9%87%8F%E5%B9%B6%E6%8F%92%E5%85%A5%E5%88%B0-ES-%E4%B8%AD/"/>
      <url>/%E6%96%87%E6%9C%AC%E8%BD%AC%E5%90%91%E9%87%8F%E5%B9%B6%E6%8F%92%E5%85%A5%E5%88%B0-ES-%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="ES-中创建索引"><a href="#ES-中创建索引" class="headerlink" title="ES 中创建索引"></a>ES 中创建索引</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PUT vector-index</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;properties&quot;: &#123;</span><br><span class="line">      &quot;title&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;text&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;content_vector&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;dense_vector&quot;,</span><br><span class="line">        &quot;dims&quot;: 768,</span><br><span class="line">        &quot;index&quot;: true,</span><br><span class="line">        &quot;similarity&quot;: &quot;l2_norm&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导入一些数据"><a href="#导入一些数据" class="headerlink" title="导入一些数据"></a>导入一些数据</h2><p>使用 logstash 工具从 mysql 数据库导入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">    jdbc &#123;</span><br><span class="line">      jdbc_driver_library =&gt; &#x27;path/to/mysql-connector-java-8.0.21.jar&#x27;</span><br><span class="line">      jdbc_driver_class =&gt; &#x27;com.mysql.cj.jdbc.Driver&#x27;</span><br><span class="line">        jdbc_connection_string =&gt; &#x27;jdbc:mysql://[IP ADDR]:[POST]/[DATABASE]?useSSL=false&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true&amp;autoReconnect=true&#x27;</span><br><span class="line">        jdbc_user =&gt; &#x27;root&#x27;</span><br><span class="line">jdbc_password =&gt; &#x27;password&#x27;</span><br><span class="line">        jdbc_validate_connection =&gt; true</span><br><span class="line">        # jdbc_paging_enabled =&gt; &#x27;true&#x27;</span><br><span class="line">        # jdbc_page_size =&gt; &#x27;100&#x27;</span><br><span class="line">        jdbc_default_timezone =&gt; &#x27;Asia/Shanghai&#x27;</span><br><span class="line">      statement =&gt; &#x27;select id,title from [your table] limit 10000&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [&#x27;@version&#x27;, &#x27;@timestamp&#x27;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    stdout &#123;</span><br><span class="line">      codec =&gt; rubydebug</span><br><span class="line">    &#125;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">      hosts =&gt; [ &#x27;https://[ES IP ADDR]:[ES POST]&#x27; ]</span><br><span class="line">      index =&gt; &#x27;[INDEX NAME]&#x27;</span><br><span class="line">      action =&gt; &#x27;create&#x27;</span><br><span class="line">      document_id =&gt; &#x27;%&#123;id&#125;&#x27;</span><br><span class="line">      cacert =&gt; &#x27;/path/to/http_ca.crt&#x27;</span><br><span class="line">      user =&gt; &quot;elastic&quot;</span><br><span class="line">      password =&gt; &quot;[elastic password]&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文本转向量并插入-ES"><a href="#文本转向量并插入-ES" class="headerlink" title="文本转向量并插入 ES"></a>文本转向量并插入 ES</h2><p>python 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> rich.progress <span class="keyword">import</span> Progress, TextColumn, BarColumn, TimeElapsedColumn, TimeRemainingColumn, MofNCompleteColumn</span><br><span class="line"><span class="keyword">from</span> text2vec <span class="keyword">import</span> SentenceModel</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line">es_url = <span class="string">&quot;https://[ES IPADDR]:[ES POST]&quot;</span></span><br><span class="line">es_username = <span class="string">&quot;elastic&quot;</span>  <span class="comment"># 替换为实际的用户名</span></span><br><span class="line">es_password = <span class="string">&quot;[elastic password]&quot;</span>  <span class="comment"># 替换为实际的密码</span></span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(</span><br><span class="line">    host=<span class="string">&quot;[MYSQL HOST]&quot;</span>, user=<span class="string">&quot;[user]&quot;</span>, password=<span class="string">&quot;[password]&quot;</span>, database=<span class="string">&quot;[DATABASE]&quot;</span>, port=[your post],</span><br><span class="line">    cursorclass=pymysql.cursors.DictCursor</span><br><span class="line">)</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># load model</span></span><br><span class="line">model = SentenceModel(<span class="string">&#x27;shibing624/text2vec-base-chinese&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># insert func</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_es</span>(<span class="params">_<span class="built_in">id</span>, vector</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;doc&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;content_vector&quot;</span>: vector.tolist()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">f&quot;<span class="subst">&#123;es_url&#125;</span>/precedent_vector/_update/<span class="subst">&#123;_<span class="built_in">id</span>&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># crt 证书生成 pem 证书：openssl x509 -in http_ca.crt -out http_ca.pem</span></span><br><span class="line">    response = requests.post(url, json=data, auth=HTTPBasicAuth(es_username, es_password), verify=<span class="string">&#x27;http_ca.pem&#x27;</span>)</span><br><span class="line">    <span class="comment"># 检查响应状态码</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        msg = <span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(_<span class="built_in">id</span>, response.text)</span><br><span class="line">        os.system(<span class="string">&quot;echo &#x27;&#123;&#125;&#x27; &gt;&gt; error.log&quot;</span>.<span class="built_in">format</span>(msg))</span><br><span class="line">        <span class="built_in">print</span>(msg)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Progress(TextColumn(<span class="string">&quot;[progress.description]&#123;task.description&#125;&quot;</span>),</span><br><span class="line">              MofNCompleteColumn(),</span><br><span class="line">              BarColumn(),</span><br><span class="line">              TextColumn(<span class="string">&quot;[progress.percentage]&#123;task.percentage:&gt;3.0f&#125;%&quot;</span>),</span><br><span class="line">              TimeRemainingColumn(),</span><br><span class="line">              TimeElapsedColumn()) <span class="keyword">as</span> progress:</span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    end = <span class="number">100</span></span><br><span class="line">    batch_size = <span class="number">100</span></span><br><span class="line">    batch = progress.add_task(description=<span class="string">&quot;Batch&quot;</span>, total=end - start)</span><br><span class="line">    task = progress.add_task(description=<span class="string">&quot;Text Embedding&quot;</span>, total=<span class="number">3</span>)</span><br><span class="line">    insert = progress.add_task(description=<span class="string">&quot;Insert To ES&quot;</span>, total=batch_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">        start = i * batch_size</span><br><span class="line"></span><br><span class="line">        <span class="comment"># step one</span></span><br><span class="line">        progress.update(task, advance=<span class="number">1</span>, description=<span class="string">&quot;Query Data&quot;</span>)</span><br><span class="line">        sql = <span class="string">f&quot;select id,section_head,section_party,section_litigation,section_truth,section_reason,section_result from precedent where id &gt; <span class="subst">&#123;start&#125;</span> order by id limit <span class="subst">&#123;batch_size&#125;</span>&quot;</span></span><br><span class="line">        os.system(<span class="string">&quot;echo &#x27;&#123;&#125;&#x27; &gt; ./query.sql&quot;</span>.<span class="built_in">format</span>(sql))</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        results = cursor.fetchall()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># step two</span></span><br><span class="line">        progress.update(task, advance=<span class="number">1</span>, description=<span class="string">&quot;Create DataFrame&quot;</span>)</span><br><span class="line">        df = pd.DataFrame(results)</span><br><span class="line">        df[<span class="string">&quot;content&quot;</span>] = df[<span class="string">&quot;section_head&quot;</span>].<span class="built_in">str</span>.cat(</span><br><span class="line">            [df[<span class="string">&quot;section_party&quot;</span>], df[<span class="string">&quot;section_litigation&quot;</span>], df[<span class="string">&quot;section_truth&quot;</span>], df[<span class="string">&quot;section_reason&quot;</span>],</span><br><span class="line">             df[<span class="string">&quot;section_result&quot;</span>]], sep=<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># step three</span></span><br><span class="line">        progress.update(task, advance=<span class="number">1</span>, description=<span class="string">f&quot;Text Embedding&quot;</span>)</span><br><span class="line">        vectors = model.encode(df[<span class="string">&quot;content&quot;</span>].tolist(), show_progress_bar=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># insert to es</span></span><br><span class="line">        <span class="keyword">for</span> _<span class="built_in">id</span>, vector <span class="keyword">in</span> <span class="built_in">zip</span>(df.<span class="built_in">id</span>.tolist(), vectors):</span><br><span class="line">            progress.update(insert, advance=<span class="number">1</span>)</span><br><span class="line">            to_es(_<span class="built_in">id</span>, vector)</span><br><span class="line">        progress.reset(insert)</span><br><span class="line"></span><br><span class="line">        progress.update(batch, advance=<span class="number">1</span>)</span><br><span class="line">        progress.reset(task)</span><br><span class="line">    progress.reset(batch)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo cactus 外链图片无法显示解决办法</title>
      <link href="/hexo-cactus-%E5%A4%96%E9%93%BE%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/hexo-cactus-%E5%A4%96%E9%93%BE%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="修复外链"><a href="#修复外链" class="headerlink" title="修复外链"></a>修复外链</h2><p>cactus 主题目录结构</p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230629180457583.png" alt="image-20230629180457583"  /><p>在 <u>&#x2F;layout&#x2F;_partial&#x2F;head.ejs</u> 文件中加一行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/gitduk/typora-image/raw/master/image/image-20230629181145010.png" alt="image-20230629181145010"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/577256660">https://zhuanlan.zhihu.com/p/577256660</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 显卡配置</title>
      <link href="/Ubuntu-%E6%98%BE%E5%8D%A1%E9%85%8D%E7%BD%AE/"/>
      <url>/Ubuntu-%E6%98%BE%E5%8D%A1%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>系统: Ubuntu 22.04<br>内核: 5.19.0-32-generic<br>显卡: AD102 [GeForce RTX 4090]</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 查看显卡设备</span><br><span class="line">lshw -numeric -C display</span><br><span class="line"></span><br><span class="line"># 查看显卡</span><br><span class="line">lsmod | grep -E &quot;nvidia|nouveau&quot;</span><br><span class="line"></span><br><span class="line"># 添加显卡 ppa</span><br><span class="line">sudo add-apt-repository ppa:graphics-drivers</span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"># 禁用 nouveau</span><br><span class="line">echo &quot;</span><br><span class="line">blacklist nouveau</span><br><span class="line">blacklist lbm-nouveau</span><br><span class="line"></span><br><span class="line">alias nouveau off</span><br><span class="line">alias lbm-nouveau off</span><br><span class="line"></span><br><span class="line">options nouveau modeset=0</span><br><span class="line"></span><br><span class="line"># for sway</span><br><span class="line">options nvidia-drm modeset=1</span><br><span class="line"></span><br><span class="line">&quot; | sudo tee /etc/modprobe.d/blacklist-nvidia-nouveau.conf</span><br><span class="line">sudo update-initramfs -u</span><br><span class="line"></span><br><span class="line"># 禁用 nvidia, enable nouveau</span><br><span class="line"># echo &quot;</span><br><span class="line"># blacklist nvidia</span><br><span class="line"># options nvidia modeset=0</span><br><span class="line"># &quot; | sudo tee /etc/modprobe.d/blacklist-nvidia-nouveau.conf</span><br><span class="line"># sudo update-initramfs -u</span><br><span class="line"></span><br><span class="line"># 查看推荐的驱动版本, 到官网下载对应的显卡驱动 &lt;https://www.nvidia.com/Download/index.aspx?lang=en-us&gt;</span><br><span class="line">ubuntu-drivers devices</span><br><span class="line"></span><br><span class="line"># 文本模式</span><br><span class="line">sudo systemctl set-default multi-user.target</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="重启进入命令行模式"><a href="#重启进入命令行模式" class="headerlink" title="重启进入命令行模式"></a>重启进入命令行模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装显卡驱动</span></span><br><span class="line">sudo dpkg -i xxx.deb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图形模式</span></span><br><span class="line">sudo systemctl set-default multi-user.target</span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装</span></span><br><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>显卡型号查询地址:<br><a href="http://pci-ids.ucw.cz/mods/PC/10de/2684">http://pci-ids.ucw.cz/mods/PC/10de/2684</a></p><h2 id="CUDA-安装"><a href="#CUDA-安装" class="headerlink" title="CUDA 安装"></a>CUDA 安装</h2><p>先查看显卡驱动支持的 CUDA 版本<br><a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html">https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html</a></p><p>再进入官网下载安装<br><a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&Distribution=Ubuntu&target_version=22.04&target_type=deb_local">https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=Ubuntu&amp;target_version=22.04&amp;target_type=deb_local</a></p><h2 id="CUDNN-安装"><a href="#CUDNN-安装" class="headerlink" title="CUDNN 安装"></a>CUDNN 安装</h2><p>解压<a href="https://developer.nvidia.com/rdp/cudnn-archive">下载</a>的 CUDNN 文件: cudnn-linux-x86_64-8.8.0.121_cuda11-archive.tar.xz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> cudnn-linux-x86_64-8.8.0.121_cuda11-archive/</span><br><span class="line">sudo <span class="built_in">cp</span> include/cudnn*.h /usr/local/cuda/include</span><br><span class="line">sudo <span class="built_in">cp</span> lib64/libcudnn* /usr/local/cuda/lib64</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://cloud.tencent.com/developer/article/2000757">https://cloud.tencent.com/developer/article/2000757</a></li><li><a href="https://blog.csdn.net/Zhou_Dao/article/details/103703289">https://blog.csdn.net/Zhou_Dao/article/details/103703289</a></li><li><a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html">https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html</a></li><li><a href="https://towardsdatascience.com/installing-multiple-cuda-cudnn-versions-in-ubuntu-fcb6aa5194e2">https://towardsdatascience.com/installing-multiple-cuda-cudnn-versions-in-ubuntu-fcb6aa5194e2</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nvidia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tidb 用户管理</title>
      <link href="/tidb-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
      <url>/tidb-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="设置用户权限"><a href="#设置用户权限" class="headerlink" title="设置用户权限"></a>设置用户权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 部分权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span> <span class="keyword">ON</span> database.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 所有权限</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> database.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;user&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="刷新权限"><a href="#刷新权限" class="headerlink" title="刷新权限"></a>刷新权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tidb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
